import io.spring.gradle.dependencymanagement.DependencyManagementPlugin
import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$rootProject.ext.springBootVersion")
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "io.spring.dependency-management"
    id 'org.asciidoctor.convert' version '1.5.8'
    id "io.freefair.lombok" version "5.1.0"
    id 'java'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

apply plugin: SpringBootPlugin
apply plugin: DependencyManagementPlugin

configurations {
    implementationOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.slf4j:jul-to-slf4j:1.7.28"
    compile "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile group: 'org.json', name: 'json', version: '20090211'

    implementation "org.modelmapper:modelmapper:$modelMapperVersion"
    implementation "javax.inject:javax.inject:1"
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"
    implementation "redis.clients:jedis:3.2.0"
    implementation "net.sargue:mailgun:1.9.0"

    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    testCompile "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    testCompile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    testCompile "org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE"
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0"
    testCompile('org.junit.jupiter:junit-jupiter:5.6.0')
    testCompile "org.springframework:spring-test:5.2.6.RELEASE"
    testCompile "org.junit.platform:junit-platform-engine:1.6.2"


    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation("org.mockito:mockito-junit-jupiter:$rootProject.ext.mockitoVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$rootProject.ext.junitVersion")
    testImplementation("org.junit.platform:junit-platform-launcher" +
            ":$rootProject.ext.junitPlatformLauncherVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$rootProject.ext.junitVersion")


    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$rootProject.ext.junitVersion")


}
sourceSets {
    test {
        java.srcDirs = ['java/com/crio/buildouts/buildoutsqa']
        java.srcDirs = ['java/com/crio/buildouts/integ/test']

    }
}

task loaddata(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.crio.buildouts.integ.test.IntegrationTest'
}

jar {
    archivesBaseName = "buildoutbackend"
    archiveVersion = "v1"
    enabled = false
}
bootJar {
    enabled = false
}